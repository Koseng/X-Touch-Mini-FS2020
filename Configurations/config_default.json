{
  "$schema": "./config.schema.json",
  "version":
  {
    "major": 1,
    "minor": 0,
    "patch": 0
  },
  "encoders": [
    {
      "index": 1,
      "event_up": "KOHLSMAN_INC",
      "event_down": "KOHLSMAN_DEC",
      "event_press": "BAROMETRIC"
    },
    {
      "index": 2,
      "event_up": "HEADING_BUG_INC",
      "event_down": "HEADING_BUG_DEC",
      "event_press": {
        "type": "condition-file",
        "event": "Functions/Generic/heading-bug-sync.jinja2",
        "description": "Set heading bug to current heading"
      }
    },
    {
      "index": 3,
      "event_up": "VOR1_OBI_INC",
      "event_down": "VOR1_OBI_DEC",
      "event_press": {
        "type": "condition-file",
        "event": "Functions/Generic/vor-bug-sync.jinja2",
        "description": "Set CRS1 bug to current heading"
      }
    },
    {
      "index": 4,
      "event_up": "AP_ALT_VAR_INC",
      "event_down": "AP_ALT_VAR_DEC"
    },
    {
      "index": 5,
      "event_up": "AP_SPD_VAR_INC",
      "event_down": "AP_SPD_VAR_DEC",
      "alternate_event_up": "AP_VS_VAR_INC",
      "alternate_event_down": "AP_VS_VAR_DEC"
    },
    {
      "index": 6,
      "event_up": "NAV1_RADIO_WHOLE_INC",
      "event_down": "NAV1_RADIO_WHOLE_DEC",
      "alternate_event_up": "NAV1_RADIO_FRACT_INC",
      "alternate_event_down": "NAV1_RADIO_FRACT_DEC",
      "event_short_press": "{alternate}",
      "event_long_press": "NAV1_RADIO_SWAP"
    },
    {
      "index": 7,
      "event_up": {
        "type": "condition",
        "event": [ "{% if data.get_global_variable('ADF_SELECTION') == 100 %}",
                     "{{ data.trigger_event('ADF_100_INC', 1) }}",
                   "{% elif data.get_global_variable('ADF_SELECTION') == 10 %}",
                     "{{ data.trigger_event('ADF_10_INC', 1) }}",
                   "{% else %}",
                     "{{ data.trigger_event('ADF_1_INC', 1) }}",
                   "{% endif %}" ]
      },
      "event_down": {
        "type": "condition",
        "event": [ "{% if data.get_global_variable('ADF_SELECTION') == 100 %}",
                     "{{ data.trigger_event('ADF_100_DEC', 1) }}",
                   "{% elif data.get_global_variable('ADF_SELECTION') == 10 %}",
                     "{{ data.trigger_event('ADF_10_DEC', 1) }}",
                   "{% else %}",
                     "{{ data.trigger_event('ADF_1_DEC', 1) }}",
                   "{% endif %}" ]
      },
      "event_press": {
        "type": "condition",
        "event": [ "{% if data.get_global_variable('ADF_SELECTION') == 1 %}",
                     "{{ data.print('ADF_SELECTION 10') }}",
                     "{{ data.set_global_variable('ADF_SELECTION', 10) }}",
                     "{{ data.set_encoder_led_value(7, 7) }}",
                   "{% elif data.get_global_variable('ADF_SELECTION') == 10 %}",
                     "{{ data.print('ADF_SELECTION 100') }}",
                     "{{ data.set_global_variable('ADF_SELECTION', 100) }}",
                     "{{ data.set_encoder_led_value(7, 13) }}",
                   "{% else %}",
                     "{{ data.print('ADF_SELECTION 1') }}",
                     "{{ data.set_global_variable('ADF_SELECTION', 1) }}",
                     "{{ data.set_encoder_led_value(7, 1) }}",
                   "{% endif %}" ],
        "description": "Change ADF mode to a different setting"
      }
    }
  ],
  "buttons": [
    {
      "index": 1,
      "event_press": "TOGGLE_FLIGHT_DIRECTOR",
      "simvar_led": "AUTOPILOT_FLIGHT_DIRECTOR_ACTIVE"
    },
    {
      "index": 2,
      "event_press": "AP_HDG_HOLD",
      "simvar_led": "AUTOPILOT_HEADING_LOCK"
    },
    {
      "index": 3,
      "event_press": "AP_BC_HOLD",
      "simvar_led": "AUTOPILOT_BACKCOURSE_HOLD"
    },
    {
      "index": 4,
      "event_press": "AP_ALT_HOLD",
      "simvar_led": "AUTOPILOT_ALTITUDE_LOCK"
    },
    {
      "index": 5,
      "event_press": "AP_VS_HOLD",
      "simvar_led": "AUTOPILOT_VERTICAL_HOLD"
    },
    {
      "index": 9,
      "event_press": "AP_MASTER",
      "simvar_led": "AUTOPILOT_MASTER"
    },
    {
      "index": 10,
      "event_press": "AP_NAV1_HOLD",
      "simvar_led": "AUTOPILOT_NAV1_LOCK"
    },
    {
      "index": 11,
      "event_press": "AP_APR_HOLD",
      "simvar_led": "AUTOPILOT_APPROACH_HOLD"
    },
    {
      "index": 12
    },
    {
      "index": 13,
      "event_press": "FLIGHT_LEVEL_CHANGE",
      "simvar_led": "AUTOPILOT_FLIGHT_LEVEL_CHANGE"
    },
    {
      "index": 14,
      "event_press": "YAW_DAMPER_TOGGLE",
      "simvar_led": "AUTOPILOT_YAW_DAMPER"
    }
  ],
  "faders": [
    {
      "index": 1,
      "event_change": "PROP_PITCH_SET",
      "min_value": 0,
      "max_value": 16383
    }
  ],
  "triggers": [
    {
      "trigger_type": "condition-file",
      "simvar": "AUTOPILOT_VERTICAL_HOLD",
      "condition": "Functions/Generic/ap-spd-vs-encoder-switcher.jinja2"
    },
    {
      "trigger_type": "condition",
      "simvar": "AUTOPILOT_HEADING_LOCK_DIR",
      "condition": [ "{% set heading = (data.get_simvar_value('AUTOPILOT_HEADING_LOCK_DIR') / 27.0) | round %}",
                     "{{ data.set_encoder_led_value(2, heading) }}"]
    }
  ]
}